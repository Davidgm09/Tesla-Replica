---
import Logo from "./Logo.astro";
---

<header id="landing-header" class="py-3 px-10 flex items-center fixed top-0 w-full justify-between z-40 text-white">
    <div class="flex flex-grow basis-0">
        <Logo />
    </div>

    <nav>
        <ul class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-300 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2">
            <li><a href="#">Model S</a></li>
            <li><a href="#">Model 3</a></li>
            <li><a href="#">Model X</a></li>
            <li><a href="#">Model Y</a></li>
            <li><a href="#">PowerWall</a></li>
            <li><a href="#">Carga</a></li>
        </ul>
    </nav>

    <nav class="flex flex-grow justify-end basis-0">
        <ul class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-300  [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2">
            <li><a href="#">Soporte</a></li>
            <li><a href="#">Tienda</a></li>
            <li><a href="#">Cuenta</a></li>
            <li><a href="#">Menú</a></li>
        </ul>
    </nav>
    <div
        id="menu-backdrop"
        class={`
        absolute bg-black/5 backdrop-blur-lg rounded
        translate-x-[var(--left)] translate-y-[var(--top)] 
        left-0 top-0
        w-[var(--width)] h-[var(--height)]
        transition-all duration-300
        ease-in-out opacity-0 -z-10
        `}
    />

 
</header>

<script>
     
    document.addEventListener('DOMContentLoaded', () => {
    const menuBackDrop = document.querySelector('#menu-backdrop') as HTMLElement;
    
    if (!menuBackDrop) {
        console.error("El elemento #menu-backdrop no se encontró en el DOM.");
        return;
    }

    const listItem = document.querySelectorAll('#landing-header li');

    listItem.forEach((item) => {
        item.addEventListener('mouseenter', () => {
            const { left, top, width, height } = item.getBoundingClientRect();
            menuBackDrop.style.transform = `translate(${left}px, ${top}px)`;
            menuBackDrop.style.width = `${width}px`;
            menuBackDrop.style.height = `${height}px`;
            menuBackDrop.style.opacity = '1';
            menuBackDrop.style.visibility = 'visible';
        });

        item.addEventListener('mouseleave', () => {
            menuBackDrop.style.opacity = '0';
            setTimeout(() => {
                menuBackDrop.style.visibility = 'hidden';
            }, 300);
        });
    });
});

</script>

<script>

    const headerEl = document.querySelector('#landing-header') as HTMLElement

    const observerOptions = {
        root: null,
        rootMargin: '0px',
        threshold: 0.90
    }

    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
            const { isIntersecting } = entry
            if (isIntersecting) {
                const color = entry.target.getAttribute("data-header-color") || 'defaultColor'
                headerEl.style.color = color;
            }
        });
    }, observerOptions);

    const sectionElements = document.querySelectorAll('.landing-section');
    sectionElements.forEach(section => observer.observe(section));

</script>